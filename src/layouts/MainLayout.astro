---
import { ViewTransitions } from "astro:transitions";
import MainIcon from "../assets/icons/MainIcon.astro";

interface Props {
  title:string,
  description: string
}

const {title, description} = Astro.props

---

<script>
  const $navTarget = document.querySelector("#navSection") as HTMLElement;
  const $$sections = document.querySelectorAll("section[data-background='dark']");

  const intersectionOptions = {
    root: null,
    rootMargin: "0px",
    threshold: 0.1,
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      !entry.isIntersecting ? $navTarget.classList.add("isDark") : $navTarget.classList.remove('isDark');
    });
  }, intersectionOptions);

  $$sections.forEach((darkSection) => observer.observe(darkSection));
</script>



<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link class="text-slate-200 dark:text-white" rel="icon" type="image/svg+xml" href="/favicon_sorozco.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description}>

    <title>{title}</title>
    <ViewTransitions></ViewTransitions>
  </head>
  <body class="bg-slate-200">
    <!-- Menu Layout -->
    <nav id="navSection" class="px-6 py-2 z-10 fixed top-0 transition-colors duration-300 text-white right-0 w-full flex justify-between items-center">
      <a href="/" class="size-12 p-2 rounded-full" aria-label="main-isotype sorozco">
        <MainIcon />
      </a>
      <ul class="navLinks flex text-xl font-semibold normal-case">
        <li><a class="hover:bg-black/40 rounded-md py-3 px-4" href="/">About</a></li>
        <li><a class="hover:bg-black/40 rounded-md py-3 px-4" href="/portfolio">Portfolio</a></li>
      </ul>
    </nav>
    <slot></slot>
  </body>
</html>

<style is:global>
  .isDark { 
    @apply text-slate-500 bg-slate-200/25 backdrop-blur-md md:backdrop-blur-none md:bg-transparent;
    a {
      @apply hover:bg-slate-300 rounded-md transition-colors duration-200;
    }
   }
  .isLigth {
    @apply text-white;
   }
  body {
    font-family: "Barlow", sans-serif;
  }
  .handText {
    font-family: "Playwrite NO", cursive;
    font-optical-sizing: auto;
    font-weight: 300;
    font-style: normal;
  }

  @font-face {
    font-family: "Barlow";
    font-weight: 400;
    src: url(../assets/fonts/Barlow-Regular.ttf);
  }

  @keyframes reveal {
    from {
      opacity: 0;
      transform: translateY(10em);
    }
    to{
      opacity: 1;
    }
  }

  @keyframes changeWidth {
    0% {
      margin-inline: 0em;
    }
    20%,100% {
      margin-inline: 1em;
      border-bottom-left-radius: 3em;
      border-bottom-right-radius: 3em;
      @apply bg-blue-900 duration-700;
    }
  }

  .clipBackground {
    clip-path: view-box;
  }

  .wrapper {
    max-inline-size: 1380px;
    margin: 0 auto;
  }

  .reveal{
    animation: reveal ease-in-out both;
    animation-timeline: view(block);
    animation-range: entry 10% contain 30%;
  }

  .changeW {
    animation: changeWidth linear both;
    animation-timeline: view(block);
    animation-range: exit 0% cover 100%;
  }

  .marqueeSection {
    mask-image: linear-gradient(to left, transparent, black 80%, transparent);
  }

</style>
